design.txt

Python is going to be the first output language, so that AQA
style Pseudo code can be converted into first-cut python
for further development. This will be useful for school children
to develop the basis of an algorithm in pseudo code, and then
convert this into Python to further develop it.

JUST DONE
added to grammar, read expression a[expr]
addded to grammar, read expression a[expr][expr]

TODO

auto generate 1d array constructor call Array()
- need scope tracking. First assignment in a scope needs to create it first

auto generate 2d array constructor call Array2D()
- need scope tracking. First assignment in a scope needs to create it first

auto generate array init constructor call Array()

(allow array copy??)

detect use of any arrays, and import array module only if it is needed.
Auto generate the array module file from parser text, so users don't need
to have an extra file (perhaps just copy the file from a file in the project dir?)


---------

auto generate readline code
auto generate writeline code

write test cases for readline
write test cases for writeline

detect use of readline or writeline and import io helper module only if it is needed
embed this file in the project and copy into user dir if needed, so user doesn't
need to manage an extra file


I *think* when we get here, the project is finished.






