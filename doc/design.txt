design.txt

Design of a grammar suitable for use with PLY.
First cut grammar with rough notes...

Notes
- no explicit string expressions in their grammar?
- but can assign string literals to variables
- no obvious way to concatenate strings
- userinput accepts numbers and strings
- output accepts numbers and strings

JUST DONE
Half implementation of an indentifier, using the back end
Can now do this:
name <- "david"
OUTPUT name

Can't add strings yet. But the trick here seems to be just
pass python objects around the stack by returning them
from the pygen module, and then the pygen action methods
get python objects back that it knows what to do with
when it instrospects their type.

TODO
Gradually expand all the grammar and get it working.

Python is going to be the first output language, so that AQA
style Pseudo code can be converted into first-cut python
for further development. This will be useful for school children
to develop the basis of an algorithm in pseudo code, and then
convert this into Python to further develop it.

