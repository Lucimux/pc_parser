design.txt

Design of a grammar suitable for use with PLY.
First cut grammar with rough notes...

Notes
- no explicit string expressions in their grammar?
- but can assign string literals to variables
- no obvious way to concatenate strings
- userinput accepts numbers and strings
- output accepts numbers and strings

JUST DONE
Got OUTPUT working in interpretive mode

TODO
Gradually expand all the grammar and get it working,
but put redirector functions in everything that just
passes 'p' to a handler object with an appropriate method.

This will allow the implementation to be changed independent
of the grammar

This will allow both interpreters and translators to be built
using the same codebase and the translators can be switched in
to generate code in different languages.

Python is going to be the first output language, so that AQA
style Pseudo code can be converted into first-cut python
for further development. This will be useful for school children
to develop the basis of an algorithm in pseudo code, and then
convert this into Python to further develop it.

