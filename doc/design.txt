design.txt

Design of a grammar suitable for use with PLY.
First cut grammar with rough notes...

Notes
- no explicit string expressions in their grammar?
- but can assign string literals to variables
- no obvious way to concatenate strings
- userinput accepts numbers and strings
- output accepts numbers and strings

JUST DONE
Implemented the full grammar.
Had to add WHEN to case, to resolve a grammar ambiguity.

TODO
Add the grammar actions back into the grammar.

Seems a shame to pollute the grammar with this detail.

A cleaner way might be like this
{backend.IF(p, 1, 3)}

* Let the IF statement handler assign any desired result to p[0]
* get the yply parser to sort out any indents for us. Might just work.

rather than:
    {
    p[0] = backend.IF(p[1], p[3])
    }




Python is going to be the first output language, so that AQA
style Pseudo code can be converted into first-cut python
for further development. This will be useful for school children
to develop the basis of an algorithm in pseudo code, and then
convert this into Python to further develop it.

